name: vim-static

# Trigger only when this workflow file is modified.
on:
  push:
    paths:
      - ".github/workflows/vim-static.yml"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository code.
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Install build dependencies.
      - name: Install Build Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libncurses-dev zip autoconf

      # Step 3: Set the build version using the GitHub run number.
      - name: Set Build Version
        run: |
          echo "BUILD_VERSION=v${GITHUB_RUN_NUMBER}" >> $GITHUB_ENV
          echo "Build version set to ${BUILD_VERSION}"

      # Step 4: Compile static Vim for x64.
      # Switch into the src directory since that's where the build scripts are located.
      # If the `configure` script isn't present, run `./autogen.sh` to generate it.
      - name: Compile Vim
        run: |
          cd src
          # Clean previous builds if Makefile already exists.
          [ -f Makefile ] && make clean || echo "No previous build â€“ starting fresh"
          # If the configure file does not exist, generate it.
          [ ! -f configure ] && { echo "configure not found, attempting to generate it via autogen.sh"; ./autogen.sh; }
          # Configure Vim for a huge feature set with static linking.
          ./configure --with-features=huge --enable-static --disable-dynamic --prefix=$GITHUB_WORKSPACE/build
          # Compile using available cores and force static linking.
          make LDFLAGS=-static -j$(nproc)
          # Install into the build directory.
          make install

      # Step 5: Tag the commit with the build version.
      - name: Tag Commit with Build Version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          echo "Tagging commit with ${BUILD_VERSION}"
          git tag ${BUILD_VERSION}
          git push origin ${BUILD_VERSION}

      # Step 6: Create a ZIP artifact from the built Vim installation.
      - name: Create Artifact Zip
        run: zip -r vim-${BUILD_VERSION}.zip build

      # Step 7: Upload the ZIP artifact.
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: vim-static-${{ env.BUILD_VERSION }}
          path: vim-${{ env.BUILD_VERSION }}.zip
