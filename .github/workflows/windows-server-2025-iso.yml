# .github/workflows/windows-server-2025-iso.yml
name: Windows Server 2025 Custom ISO Build with Intel Wi-Fi Drivers

on:
  push:
    paths:
      - '.github/workflows/windows-server-2025-iso.yml'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install 7-Zip (for diagnostic purposes)
        run: |
          choco install 7zip.install -y
          7z

      - name: Download Windows Server 2025 ISO (Verbose)
        run: |
          Invoke-WebRequest -Uri "https://shorturl.at/VeNN7"
          dir

      - name: Verify ISO Exists Before Mounting
        run: |
          if (!(Test-Path "Windows_Server_2025.iso")) {
            Write-Host "ISO file missing! Exiting..."
            exit 1
          }

      - name: Mount ISO and Extract Files
        run: |
          # Get the full path to the ISO
          $isoPath = (Resolve-Path "Windows_Server_2025.iso").Path
          # Mount the ISO
          Mount-DiskImage -ImagePath $isoPath
          # Find the mounted CD-ROM drive letter
          $isoDrive = (Get-Volume | Where-Object { $_.DriveType -eq 'CD-ROM' }).DriveLetter
          Write-Host "Detected ISO Drive: $isoDrive"
          if (!$isoDrive) {
            Write-Host "ISO mount failed! Exiting..."
            exit 1
          }
          # Remove any previous extraction folder and create a new one
          if (Test-Path ".\ISO_Contents") {
              Remove-Item ".\ISO_Contents" -Recurse -Force
          }
          New-Item -ItemType Directory -Path ".\ISO_Contents"
          # Copy all ISO contents to the extraction folder
          Copy-Item "$($isoDrive):\*" -Destination ".\ISO_Contents" -Recurse -Force

      - name: Download Intel Wireless Wi-Fi Drivers (ZIP, Verbose)
        run: |
          Invoke-WebRequest -Uri "https://downloadmirror.intel.com/853378/WiFi-23.130.1-Driver64-Win10-Win11.zip" -OutFile "WiFi_Driver.zip" -Verbose
          Get-Item "WiFi_Driver.zip"
          dir

      - name: Extract Intel Wireless Wi-Fi Drivers from ZIP
        run: |
          if (!(Test-Path "WiFi_Driver.zip")) {
            Write-Host "WiFi driver ZIP file is missing! Exiting..."
            exit 1
          }
          Write-Host "Extracting WiFi driver ZIP..."
          Expand-Archive -Path "WiFi_Driver.zip" -DestinationPath ".\Drivers" -Force
          Write-Host "Listing extracted files in .\Drivers:"
          dir .\Drivers
          if (!(Test-Path ".\Drivers") -or ((Get-ChildItem .\Drivers -Recurse | Measure-Object).Count -eq 0)) {
            Write-Host "Driver extraction failed! Exiting..."
            exit 1
          }

      - name: Inject Extracted Drivers into Offline Windows Image
        run: |
          # Verify that install.wim exists (typically in ISO_Contents\sources)
          if (!(Test-Path ".\ISO_Contents\sources\install.wim")) {
              Write-Host "install.wim not found! Please verify the ISO structure."
              exit 1
          }
          # Remove the read-only attribute and grant full control on install.wim
          Write-Host "Removing read-only attribute and resetting permissions on install.wim..."
          attrib -r ".\ISO_Contents\sources\install.wim"
          icacls ".\ISO_Contents\sources\install.wim" /grant Everyone:F
          
          # Clean (if necessary) and create mount directory
          if (Test-Path ".\mount") {
              Remove-Item ".\mount" -Recurse -Force
          }
          New-Item -ItemType Directory -Path ".\mount"
          
          Write-Host "Mounting install.wim..."
          dism /Mount-Image /ImageFile:".\ISO_Contents\sources\install.wim" /index:1 /MountDir:".\mount"
          
          Write-Host "Injecting extracted drivers into the offline image..."
          dism /Image:".\mount" /Add-Driver /Driver:".\Drivers" /Recurse
          
          Write-Host "Unmounting and committing changes to install.wim..."
          dism /Unmount-Image /MountDir:".\mount" /Commit

      - name: Enable Wireless LAN Service
        run: |
          Install-WindowsFeature -Name Wireless-Networking

      - name: Download Oscdimg from GitHub
        run: |
          Write-Host "Downloading Oscdimg from GitHub..."
          Invoke-WebRequest -Uri "https://github.com/hydrz/oscdimg/raw/refs/heads/main/oscdimg-amd64.zip" -OutFile "oscdimg-amd64.zip" -Verbose
          Expand-Archive -Path "oscdimg-amd64.zip" -DestinationPath ".\oscdimg" -Force
          Write-Host "Listing Oscdimg contents:"
          dir .\oscdimg

      - name: Repack Customized ISO
        run: |
          # Build the path to oscdimg.exe from the extracted folder
          $oscdimgPath = Join-Path (Resolve-Path ".\oscdimg") "oscdimg.exe"
          if (!(Test-Path $oscdimgPath)) {
            Write-Host "oscdimg.exe not found in the downloaded package."
            exit 1
          }
          Write-Host "Using oscdimg at: $oscdimgPath"
          & $oscdimgPath -n -m -b".\ISO_Contents\boot\etfsboot.com" ".\ISO_Contents" "Windows_Server_2025_Custom.iso"

      - name: Release Updated ISO
        uses: ncipollo/release-action@v1
        with:
          artifacts: "Windows_Server_2025_Custom.iso"
          tag: "v2025.7"
          name: "Windows Server 2025 ISO with Intel Wi-Fi Drivers (ZIP)"
          body: "This release integrates Intel Wireless Wi-Fi drivers (from ZIP) into the offline image and repacks the ISO using Oscdimg from GitHub."
