name: Build and Release Midnight Commander (mc-4.8.33)

on:
  push:
    paths:
      - ".github/workflows/mc-static.yml"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set Environment Variables
        run: |
          echo "MC_VERSION=4.8.33" >> $GITHUB_ENV
          echo "FINAL_VERSION=mc-4.8.33-static" >> $GITHUB_ENV
          echo "BUILD_DATE=$(date -u +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential wget tar autoconf automake libtool gettext intltool \
            libncursesw5-dev libglib2.0-dev pkg-config libslang2-dev

      - name: Download and extract Midnight Commander source
        run: |
          wget --no-check-certificate https://github.com/MidnightCommander/mc/archive/refs/tags/${MC_VERSION}.tar.gz -O mc.tar.gz
          tar -xf mc.tar.gz
          mv mc-${MC_VERSION} mc-source

      - name: Provide dummy autopoint
        run: |
          # Create a dummy 'autopoint' to satisfy autotools if needed.
          echo '#!/bin/sh' > dummy_autopoint
          chmod +x dummy_autopoint
          sudo mv dummy_autopoint /usr/local/bin/autopoint

      - name: Run intltoolize to generate NLS files
        working-directory: mc-source
        run: |
          intltoolize --force --copy --automake

      - name: Generate configure script and build static binary
        working-directory: mc-source
        run: |
          autoreconf -fi
          LDFLAGS="-static" ./configure --prefix=/usr/local
          make -j$(nproc)

      - name: Prepare release asset
        run: |
          cp mc-source/src/mc $GITHUB_WORKSPACE/mc-static
          zip mc-${FINAL_VERSION}.zip mc-static

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.FINAL_VERSION }}
          name: "Midnight Commander ${{ env.FINAL_VERSION }}"
          body: |
            Statically linked x86-64 executable
            **Release Version:** ${{ env.FINAL_VERSION }}
            **Build Date:** ${{ env.BUILD_DATE }}
            **Commit:** ${{ github.sha }}
          artifacts: mc-${{ env.FINAL_VERSION }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}
